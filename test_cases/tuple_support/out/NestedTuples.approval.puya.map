{
  "version": 3,
  "sources": [
    "../nested_tuples.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCQ;AAA+B;AAA/B;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AAkEK;;AAAA;AAAA;AAAA;;AAAA;AAlEL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAkEK;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA7DL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AA6DK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAtDL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAsDK;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAjBL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBK;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAbL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAasIA;;;AAGS;AAEA;AAIE;;AAAW;AAAX;AAAP;;;AAKJ;;AAAA;;;AAEa;;AADL;;AAEK;;AAFL;;AAGK;;AAHL;;AAKe;;AAAA;;AAAA;AAAZ;;AAAA;AAAP;AAEe;AAAA;;AAAA;;AAAA;AAAR;;AAAA;;AAAA;AAAP;AAIA;;AAAA;AAAA;;AAAA;;AAAA;AACO;AAAP;AACmB;AAAA;;AAAA;;AAAA;AAAZ;AAAP;;AA7JJ;;;AAC0B;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAClB;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAER;;;;;;;;AAEe;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;AAAA;;AAAA;AAAP;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;AAEf;;;AAEuC;;AAAQ;AAAR;AADN;;AAAA;AAAA;;AAAA;AACzB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA+B;;AAAA;AAA/B;;AAAA;AAAA;AAAA;;AAER;;;AAC8B;;AAAA;AAAA;;AAAA;AACf;AAAO;;AAAP;AAAA;AAAA;AAAA;;AAAP;AAER;;;;AACkC;;AAAA;AAAA;;AAAA;AACnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAAA;;AAAA;AAAP;;AAAA;AAAO;AAAA;;AAAA;;;;AAEf;;;;AAgBwB;AAAW;AA4Dd;AAGV;AAAA;AAAA;AAAa;;AAAb;AAAA;AAAA;AAAP;AACA;AAAA;AACA;AA/DwB;AAAoB;AAAxC;;;AACoB;AAAoB;AAAxC;;;AA0II;AAFJ;AACA;;AAKS;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AAFR;;;;;;;;;AAJQ;AAQA;;AAPA;AAOA;AACS;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AADR;;;;;;;;AAGW;;AAAS;AAAT;AAAc;;AAAd;AAAP;AAjHI;AAA+B;AAA/B;AALA;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAA;AAAA;AAAA;AAQO;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAP;AA7BO;AAAP;;AAAA;;;AAiIA;AAOA;;AAPA;AAOA;;;;;AARA;AAQA;;AARA;AAQA;;;;;AAPA;AAOA;;AARA;AAQA;;;;;;AAPA;AAGA;;AAHA;AAGA;;;;;AAJA;AAIA;;AAJA;AAIA;;;;;AAHA;AAGA;;AAJA;AAIA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"\" \"build_nested_call_count\" 0x000c 0x0012 0x0004 \"box\" \"pwl\""
    },
    "56": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "58": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "61": {
      "op": "bytec_2 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\""
      ],
      "stack_out": [
        "\"build_nested_call_count\""
      ]
    },
    "62": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0"
      ],
      "stack_out": [
        "\"build_nested_call_count\"",
        "0"
      ]
    },
    "63": {
      "op": "app_global_put",
      "stack_out": []
    },
    "64": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "66": {
      "op": "bz main_bare_routing@14",
      "stack_out": []
    },
    "69": {
      "op": "pushbytess 0x383e1e8b 0x68cbedd7 0x2263fcf1 0xbfc37339 0xc660beaa 0x9e5a3ba7 0xcea0521b 0x373f5b24 0xec593096 // method \"store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void\", method \"load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])\", method \"store_tuple_in_box((uint64,uint64))void\", method \"is_tuple_in_box((uint64,uint64))bool\", method \"load_tuple_from_box((uint64,uint64))(uint64,uint64)\", method \"run_tests()bool\", method \"nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))\", method \"named_tuple((uint64,byte[],string))(uint64,byte[],string)\", method \"nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)"
      ],
      "stack_out": [
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))"
      ]
    },
    "116": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "tmp%2#0"
      ]
    },
    "119": {
      "op": "match main_store_tuple_route@5 main_load_tuple_route@6 main_store_tuple_in_box_route@7 main_is_tuple_in_box_route@8 main_load_tuple_from_box_route@9 main_run_tests_route@10 main_nested_tuple_params_route@11 main_named_tuple_route@12 main_nested_named_tuple_params_route@13",
      "stack_out": []
    },
    "139": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "140": {
      "op": "return",
      "stack_out": []
    },
    "141": {
      "block": "main_nested_named_tuple_params_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "143": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "144": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "145": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "147": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "148": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "151": {
      "op": "dup",
      "defined_out": [
        "tmp%48#0",
        "tmp%48#0 (copy)"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%48#0 (copy)"
      ]
    },
    "152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%48#0",
        "tmp%48#0 (copy)"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%48#0 (copy)",
        "0"
      ]
    },
    "153": {
      "op": "extract_uint64",
      "defined_out": [
        "args.foo#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "args.foo#0"
      ]
    },
    "154": {
      "op": "dig 1",
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "tmp%48#0 (copy)"
      ]
    },
    "156": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "args.foo_arc#0"
      ]
    },
    "159": {
      "op": "dig 2",
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%48#0 (copy)"
      ]
    },
    "161": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%48#0",
        "tmp%48#0 (copy)"
      ],
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%48#0 (copy)",
        "16"
      ]
    },
    "163": {
      "op": "extract_uint16",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%10#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%10#0"
      ]
    },
    "164": {
      "op": "dig 3",
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%10#0",
        "tmp%48#0 (copy)"
      ]
    },
    "166": {
      "op": "len",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item_end_offset%10#0",
        "item_start_offset%10#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%10#0",
        "item_end_offset%10#0"
      ]
    },
    "167": {
      "op": "uncover 4",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item_start_offset%10#0",
        "item_end_offset%10#0",
        "tmp%48#0"
      ]
    },
    "169": {
      "op": "cover 2",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "tmp%48#0",
        "item_start_offset%10#0",
        "item_end_offset%10#0"
      ]
    },
    "171": {
      "op": "substring3",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0"
      ]
    },
    "172": {
      "op": "dup",
      "defined_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item2%5#0 (copy)"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item2%5#0 (copy)"
      ]
    },
    "173": {
      "op": "intc_0 // 0",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item2%5#0 (copy)",
        "0"
      ]
    },
    "174": {
      "op": "extract_uint64",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0"
      ]
    },
    "175": {
      "op": "dig 1",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item2%5#0 (copy)"
      ]
    },
    "177": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item2%5#0 (copy)"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item2%5#0 (copy)",
        "8"
      ]
    },
    "178": {
      "op": "extract_uint16",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item_start_offset%11#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_start_offset%11#0"
      ]
    },
    "179": {
      "op": "dig 2",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_start_offset%11#0",
        "item2%5#0 (copy)"
      ]
    },
    "181": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item2%5#0 (copy)",
        "item_start_offset%11#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_start_offset%11#0",
        "item2%5#0 (copy)",
        "10"
      ]
    },
    "183": {
      "op": "extract_uint16",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item_end_offset%11#0",
        "item_start_offset%11#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_start_offset%11#0",
        "item_end_offset%11#0"
      ]
    },
    "184": {
      "op": "dig 3",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_start_offset%11#0",
        "item_end_offset%11#0",
        "item2%5#0 (copy)"
      ]
    },
    "186": {
      "op": "uncover 2",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "item2%5#0 (copy)",
        "item_start_offset%11#0"
      ]
    },
    "188": {
      "op": "dig 2",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item2%5#0 (copy)",
        "item_end_offset%11#0",
        "item_end_offset%11#0 (copy)",
        "item_start_offset%11#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "item2%5#0 (copy)",
        "item_start_offset%11#0",
        "item_end_offset%11#0 (copy)"
      ]
    },
    "190": {
      "op": "substring3",
      "defined_out": [
        "args.child.a#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item1%15#0",
        "item2%5#0",
        "item_end_offset%11#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "item1%15#0"
      ]
    },
    "191": {
      "op": "extract 2 0",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item_end_offset%11#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "args.child.b#0"
      ]
    },
    "194": {
      "op": "dig 3",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "args.child.b#0",
        "item2%5#0 (copy)"
      ]
    },
    "196": {
      "op": "len",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "item_end_offset%11#0",
        "item_end_offset%12#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "item2%5#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "args.child.b#0",
        "item_end_offset%12#0"
      ]
    },
    "197": {
      "op": "uncover 4",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "item_end_offset%11#0",
        "args.child.b#0",
        "item_end_offset%12#0",
        "item2%5#0"
      ]
    },
    "199": {
      "op": "uncover 3",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "item_end_offset%12#0",
        "item2%5#0",
        "item_end_offset%11#0"
      ]
    },
    "201": {
      "op": "uncover 2",
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "item2%5#0",
        "item_end_offset%11#0",
        "item_end_offset%12#0"
      ]
    },
    "203": {
      "op": "substring3",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.foo#0",
        "args.foo_arc#0",
        "item2%6#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "item2%6#0"
      ]
    },
    "204": {
      "op": "extract 2 0",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo#0",
        "args.foo_arc#0"
      ],
      "stack_out": [
        "args.foo#0",
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0"
      ]
    },
    "207": {
      "op": "uncover 4",
      "stack_out": [
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo#0"
      ]
    },
    "209": {
      "op": "itob",
      "defined_out": [
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.a#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0"
      ]
    },
    "210": {
      "op": "uncover 3",
      "stack_out": [
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "args.child.a#0"
      ]
    },
    "212": {
      "op": "itob",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "213": {
      "op": "dig 3",
      "defined_out": [
        "args.child.b#0",
        "args.child.b#0 (copy)",
        "args.child.c#0",
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "args.child.b#0 (copy)"
      ]
    },
    "215": {
      "op": "len",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "length%6#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "length%6#0"
      ]
    },
    "216": {
      "op": "itob",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "as_bytes%16#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "as_bytes%16#0"
      ]
    },
    "217": {
      "op": "extract 6 2",
      "defined_out": [
        "args.child.b#0",
        "args.child.c#0",
        "args.foo_arc#0",
        "length_uint16%6#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.b#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "length_uint16%6#0"
      ]
    },
    "220": {
      "op": "uncover 4",
      "stack_out": [
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "length_uint16%6#0",
        "args.child.b#0"
      ]
    },
    "222": {
      "op": "concat",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "encoded_value%6#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0"
      ]
    },
    "223": {
      "op": "dig 3",
      "defined_out": [
        "args.child.c#0",
        "args.child.c#0 (copy)",
        "args.foo_arc#0",
        "encoded_value%6#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0",
        "args.child.c#0 (copy)"
      ]
    },
    "225": {
      "op": "len",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "encoded_value%6#0",
        "length%7#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0",
        "length%7#0"
      ]
    },
    "226": {
      "op": "itob",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "as_bytes%17#0",
        "encoded_value%6#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0",
        "as_bytes%17#0"
      ]
    },
    "227": {
      "op": "extract 6 2",
      "defined_out": [
        "args.child.c#0",
        "args.foo_arc#0",
        "encoded_value%6#0",
        "length_uint16%7#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "args.child.c#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0",
        "length_uint16%7#0"
      ]
    },
    "230": {
      "op": "uncover 4",
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0",
        "length_uint16%7#0",
        "args.child.c#0"
      ]
    },
    "232": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "encoded_value%6#0",
        "encoded_value%7#0"
      ]
    },
    "233": {
      "op": "uncover 2",
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%7#0"
      ]
    },
    "235": {
      "op": "bytec_3 // 0x000c",
      "defined_out": [
        "0x000c",
        "args.foo_arc#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%7#0",
        "0x000c"
      ]
    },
    "236": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0"
      ]
    },
    "237": {
      "op": "dig 2",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%6#0 (copy)",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0 (copy)"
      ]
    },
    "239": {
      "op": "len",
      "defined_out": [
        "args.foo_arc#0",
        "data_length%10#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0",
        "data_length%10#0"
      ]
    },
    "240": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "args.foo_arc#0",
        "data_length%10#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0",
        "data_length%10#0",
        "12"
      ]
    },
    "242": {
      "op": "+",
      "defined_out": [
        "args.foo_arc#0",
        "current_tail_offset%18#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0",
        "current_tail_offset%18#0"
      ]
    },
    "243": {
      "op": "itob",
      "defined_out": [
        "args.foo_arc#0",
        "as_bytes%19#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0",
        "as_bytes%19#0"
      ]
    },
    "244": {
      "op": "extract 6 2",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%36#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "offset_as_uint16%11#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%36#0",
        "offset_as_uint16%11#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%37#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%37#0"
      ]
    },
    "248": {
      "op": "uncover 2",
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%37#0",
        "encoded_value%6#0"
      ]
    },
    "250": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%38#0",
        "encoded_value%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_value%7#0",
        "encoded_tuple_buffer%38#0"
      ]
    },
    "251": {
      "op": "swap",
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%38#0",
        "encoded_value%7#0"
      ]
    },
    "252": {
      "op": "concat",
      "defined_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%39#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "args.foo_arc#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%39#0"
      ]
    },
    "253": {
      "op": "swap",
      "stack_out": [
        "args.foo_arc#0",
        "encoded_tuple_buffer%39#0",
        "val_as_bytes%6#0"
      ]
    },
    "254": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_tuple_buffer%39#0",
        "val_as_bytes%6#0",
        "args.foo_arc#0"
      ]
    },
    "256": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%39#0",
        "encoded_tuple_buffer%42#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%39#0",
        "encoded_tuple_buffer%42#0"
      ]
    },
    "257": {
      "op": "bytec 4 // 0x0012",
      "defined_out": [
        "0x0012",
        "encoded_tuple_buffer%39#0",
        "encoded_tuple_buffer%42#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%39#0",
        "encoded_tuple_buffer%42#0",
        "0x0012"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%39#0",
        "encoded_tuple_buffer%43#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%39#0",
        "encoded_tuple_buffer%43#0"
      ]
    },
    "260": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%43#0",
        "encoded_tuple_buffer%39#0"
      ]
    },
    "261": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%44#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%44#0"
      ]
    },
    "262": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%44#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%44#0",
        "0x151f7c75"
      ]
    },
    "263": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%44#0"
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "265": {
      "op": "log",
      "stack_out": []
    },
    "266": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "267": {
      "op": "return",
      "stack_out": []
    },
    "268": {
      "block": "main_named_tuple_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "270": {
      "op": "!",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "271": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "272": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "274": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "275": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "278": {
      "op": "dup",
      "defined_out": [
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ],
      "stack_out": [
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ]
    },
    "279": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ],
      "stack_out": [
        "tmp%42#0",
        "tmp%42#0 (copy)",
        "0"
      ]
    },
    "280": {
      "op": "extract_uint64",
      "defined_out": [
        "args.a#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0"
      ]
    },
    "281": {
      "op": "dig 1",
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "tmp%42#0 (copy)"
      ]
    },
    "283": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "args.a#0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "tmp%42#0 (copy)",
        "8"
      ]
    },
    "284": {
      "op": "extract_uint16",
      "defined_out": [
        "args.a#0",
        "item_start_offset%8#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_start_offset%8#0"
      ]
    },
    "285": {
      "op": "dig 2",
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_start_offset%8#0",
        "tmp%42#0 (copy)"
      ]
    },
    "287": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "args.a#0",
        "item_start_offset%8#0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_start_offset%8#0",
        "tmp%42#0 (copy)",
        "10"
      ]
    },
    "289": {
      "op": "extract_uint16",
      "defined_out": [
        "args.a#0",
        "item_end_offset%8#0",
        "item_start_offset%8#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_start_offset%8#0",
        "item_end_offset%8#0"
      ]
    },
    "290": {
      "op": "dig 3",
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_start_offset%8#0",
        "item_end_offset%8#0",
        "tmp%42#0 (copy)"
      ]
    },
    "292": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_end_offset%8#0",
        "tmp%42#0 (copy)",
        "item_start_offset%8#0"
      ]
    },
    "294": {
      "op": "dig 2",
      "defined_out": [
        "args.a#0",
        "item_end_offset%8#0",
        "item_end_offset%8#0 (copy)",
        "item_start_offset%8#0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_end_offset%8#0",
        "tmp%42#0 (copy)",
        "item_start_offset%8#0",
        "item_end_offset%8#0 (copy)"
      ]
    },
    "296": {
      "op": "substring3",
      "defined_out": [
        "args.a#0",
        "item1%12#0",
        "item_end_offset%8#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_end_offset%8#0",
        "item1%12#0"
      ]
    },
    "297": {
      "op": "extract 2 0",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "item_end_offset%8#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_end_offset%8#0",
        "args.b#0"
      ]
    },
    "300": {
      "op": "dig 3",
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_end_offset%8#0",
        "args.b#0",
        "tmp%42#0 (copy)"
      ]
    },
    "302": {
      "op": "len",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "item_end_offset%8#0",
        "item_end_offset%9#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "args.a#0",
        "item_end_offset%8#0",
        "args.b#0",
        "item_end_offset%9#0"
      ]
    },
    "303": {
      "op": "uncover 4",
      "stack_out": [
        "args.a#0",
        "item_end_offset%8#0",
        "args.b#0",
        "item_end_offset%9#0",
        "tmp%42#0"
      ]
    },
    "305": {
      "op": "uncover 3",
      "stack_out": [
        "args.a#0",
        "args.b#0",
        "item_end_offset%9#0",
        "tmp%42#0",
        "item_end_offset%8#0"
      ]
    },
    "307": {
      "op": "uncover 2",
      "stack_out": [
        "args.a#0",
        "args.b#0",
        "tmp%42#0",
        "item_end_offset%8#0",
        "item_end_offset%9#0"
      ]
    },
    "309": {
      "op": "substring3",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "item2%3#0"
      ],
      "stack_out": [
        "args.a#0",
        "args.b#0",
        "item2%3#0"
      ]
    },
    "310": {
      "op": "extract 2 0",
      "defined_out": [
        "args.a#0",
        "args.b#0",
        "args.c#0"
      ],
      "stack_out": [
        "args.a#0",
        "args.b#0",
        "args.c#0"
      ]
    },
    "313": {
      "op": "uncover 2",
      "stack_out": [
        "args.b#0",
        "args.c#0",
        "args.a#0"
      ]
    },
    "315": {
      "op": "itob",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%5#0"
      ]
    },
    "316": {
      "op": "dig 2",
      "defined_out": [
        "args.b#0",
        "args.b#0 (copy)",
        "args.c#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%5#0",
        "args.b#0 (copy)"
      ]
    },
    "318": {
      "op": "len",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "length%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%5#0",
        "length%4#0"
      ]
    },
    "319": {
      "op": "itob",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "as_bytes%12#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%5#0",
        "as_bytes%12#0"
      ]
    },
    "320": {
      "op": "extract 6 2",
      "defined_out": [
        "args.b#0",
        "args.c#0",
        "length_uint16%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.b#0",
        "args.c#0",
        "val_as_bytes%5#0",
        "length_uint16%4#0"
      ]
    },
    "323": {
      "op": "uncover 3",
      "stack_out": [
        "args.c#0",
        "val_as_bytes%5#0",
        "length_uint16%4#0",
        "args.b#0"
      ]
    },
    "325": {
      "op": "concat",
      "defined_out": [
        "args.c#0",
        "encoded_value%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.c#0",
        "val_as_bytes%5#0",
        "encoded_value%4#0"
      ]
    },
    "326": {
      "op": "dig 2",
      "defined_out": [
        "args.c#0",
        "args.c#0 (copy)",
        "encoded_value%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.c#0",
        "val_as_bytes%5#0",
        "encoded_value%4#0",
        "args.c#0 (copy)"
      ]
    },
    "328": {
      "op": "len",
      "defined_out": [
        "args.c#0",
        "encoded_value%4#0",
        "length%5#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.c#0",
        "val_as_bytes%5#0",
        "encoded_value%4#0",
        "length%5#0"
      ]
    },
    "329": {
      "op": "itob",
      "defined_out": [
        "args.c#0",
        "as_bytes%13#0",
        "encoded_value%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.c#0",
        "val_as_bytes%5#0",
        "encoded_value%4#0",
        "as_bytes%13#0"
      ]
    },
    "330": {
      "op": "extract 6 2",
      "defined_out": [
        "args.c#0",
        "encoded_value%4#0",
        "length_uint16%5#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "args.c#0",
        "val_as_bytes%5#0",
        "encoded_value%4#0",
        "length_uint16%5#0"
      ]
    },
    "333": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%5#0",
        "encoded_value%4#0",
        "length_uint16%5#0",
        "args.c#0"
      ]
    },
    "335": {
      "op": "concat",
      "defined_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ]
    },
    "336": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%5#0"
      ]
    },
    "338": {
      "op": "bytec_3 // 0x000c",
      "defined_out": [
        "0x000c",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "val_as_bytes%5#0",
        "0x000c"
      ]
    },
    "339": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0"
      ]
    },
    "340": {
      "op": "dig 2",
      "defined_out": [
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%4#0 (copy)",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0 (copy)"
      ]
    },
    "342": {
      "op": "len",
      "defined_out": [
        "data_length%8#0",
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0",
        "data_length%8#0"
      ]
    },
    "343": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%8#0",
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0",
        "data_length%8#0",
        "12"
      ]
    },
    "345": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%15#0",
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0",
        "current_tail_offset%15#0"
      ]
    },
    "346": {
      "op": "itob",
      "defined_out": [
        "as_bytes%15#0",
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0",
        "as_bytes%15#0"
      ]
    },
    "347": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%30#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%9#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%30#0",
        "offset_as_uint16%9#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%31#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%31#0"
      ]
    },
    "351": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "encoded_tuple_buffer%31#0",
        "encoded_value%4#0"
      ]
    },
    "353": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%32#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "encoded_tuple_buffer%32#0"
      ]
    },
    "354": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%32#0",
        "encoded_value%5#0"
      ]
    },
    "355": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%33#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%33#0"
      ]
    },
    "356": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%33#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%33#0",
        "0x151f7c75"
      ]
    },
    "357": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%33#0"
      ]
    },
    "358": {
      "op": "concat",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "359": {
      "op": "log",
      "stack_out": []
    },
    "360": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "361": {
      "op": "return",
      "stack_out": []
    },
    "362": {
      "block": "main_nested_tuple_params_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "364": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "365": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "366": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "368": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "369": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "372": {
      "op": "dup",
      "defined_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ]
    },
    "373": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)",
        "0"
      ]
    },
    "374": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%5#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_start_offset%5#0"
      ]
    },
    "375": {
      "op": "dig 1",
      "stack_out": [
        "tmp%36#0",
        "item_start_offset%5#0",
        "tmp%36#0 (copy)"
      ]
    },
    "377": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "item_start_offset%5#0",
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_start_offset%5#0",
        "tmp%36#0 (copy)",
        "2"
      ]
    },
    "378": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%5#0",
        "item_start_offset%5#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_start_offset%5#0",
        "item_end_offset%5#0"
      ]
    },
    "379": {
      "op": "dig 2",
      "stack_out": [
        "tmp%36#0",
        "item_start_offset%5#0",
        "item_end_offset%5#0",
        "tmp%36#0 (copy)"
      ]
    },
    "381": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%36#0",
        "item_end_offset%5#0",
        "tmp%36#0 (copy)",
        "item_start_offset%5#0"
      ]
    },
    "383": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%5#0",
        "item_end_offset%5#0 (copy)",
        "item_start_offset%5#0",
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_end_offset%5#0",
        "tmp%36#0 (copy)",
        "item_start_offset%5#0",
        "item_end_offset%5#0 (copy)"
      ]
    },
    "385": {
      "op": "substring3",
      "defined_out": [
        "item0%11#0",
        "item_end_offset%5#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_end_offset%5#0",
        "item0%11#0"
      ]
    },
    "386": {
      "op": "extract 2 0",
      "defined_out": [
        "args.0#0",
        "item_end_offset%5#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_end_offset%5#0",
        "args.0#0"
      ]
    },
    "389": {
      "op": "dig 2",
      "stack_out": [
        "tmp%36#0",
        "item_end_offset%5#0",
        "args.0#0",
        "tmp%36#0 (copy)"
      ]
    },
    "391": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "item_end_offset%5#0",
        "args.0#0",
        "item_end_offset%6#0"
      ]
    },
    "392": {
      "op": "uncover 3",
      "stack_out": [
        "item_end_offset%5#0",
        "args.0#0",
        "item_end_offset%6#0",
        "tmp%36#0"
      ]
    },
    "394": {
      "op": "uncover 3",
      "stack_out": [
        "args.0#0",
        "item_end_offset%6#0",
        "tmp%36#0",
        "item_end_offset%5#0"
      ]
    },
    "396": {
      "op": "uncover 2",
      "stack_out": [
        "args.0#0",
        "tmp%36#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0"
      ]
    },
    "398": {
      "op": "substring3",
      "defined_out": [
        "args.0#0",
        "item1%10#0"
      ],
      "stack_out": [
        "args.0#0",
        "item1%10#0"
      ]
    },
    "399": {
      "op": "dup",
      "defined_out": [
        "args.0#0",
        "item1%10#0",
        "item1%10#0 (copy)"
      ],
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item1%10#0 (copy)"
      ]
    },
    "400": {
      "op": "intc_0 // 0",
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item1%10#0 (copy)",
        "0"
      ]
    },
    "401": {
      "op": "extract_uint16",
      "defined_out": [
        "args.0#0",
        "item1%10#0",
        "item_start_offset%7#0"
      ],
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item_start_offset%7#0"
      ]
    },
    "402": {
      "op": "dig 1",
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item_start_offset%7#0",
        "item1%10#0 (copy)"
      ]
    },
    "404": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "item1%10#0",
        "item_end_offset%7#0",
        "item_start_offset%7#0"
      ],
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item_start_offset%7#0",
        "item_end_offset%7#0"
      ]
    },
    "405": {
      "op": "dig 2",
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item_start_offset%7#0",
        "item_end_offset%7#0",
        "item1%10#0 (copy)"
      ]
    },
    "407": {
      "op": "cover 2",
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item1%10#0 (copy)",
        "item_start_offset%7#0",
        "item_end_offset%7#0"
      ]
    },
    "409": {
      "op": "substring3",
      "defined_out": [
        "args.0#0",
        "item0%13#0",
        "item1%10#0"
      ],
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "item0%13#0"
      ]
    },
    "410": {
      "op": "extract 2 0",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%10#0"
      ],
      "stack_out": [
        "args.0#0",
        "item1%10#0",
        "args.1.0#0"
      ]
    },
    "413": {
      "op": "swap",
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%10#0"
      ]
    },
    "414": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%11#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%11#0"
      ]
    },
    "417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "item1%11#0",
        "0"
      ]
    },
    "418": {
      "op": "extract_uint64",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0"
      ]
    },
    "419": {
      "op": "dig 1",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.0#0 (copy)",
        "args.1.1.0#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "args.1.0#0 (copy)"
      ]
    },
    "421": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length%2#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length%2#0"
      ]
    },
    "422": {
      "op": "itob",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "as_bytes%7#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "as_bytes%7#0"
      ]
    },
    "423": {
      "op": "extract 6 2",
      "defined_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length_uint16%2#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.0#0",
        "args.1.1.0#0",
        "length_uint16%2#0"
      ]
    },
    "426": {
      "op": "uncover 2",
      "stack_out": [
        "args.0#0",
        "args.1.1.0#0",
        "length_uint16%2#0",
        "args.1.0#0"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0"
      ]
    },
    "429": {
      "op": "dig 2",
      "defined_out": [
        "args.0#0",
        "args.0#0 (copy)",
        "args.1.1.0#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0",
        "args.0#0 (copy)"
      ]
    },
    "431": {
      "op": "len",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0",
        "length%3#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0",
        "length%3#0"
      ]
    },
    "432": {
      "op": "itob",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "as_bytes%8#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0",
        "as_bytes%8#0"
      ]
    },
    "433": {
      "op": "extract 6 2",
      "defined_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0",
        "length_uint16%3#0"
      ],
      "stack_out": [
        "args.0#0",
        "args.1.1.0#0",
        "encoded_value%2#0",
        "length_uint16%3#0"
      ]
    },
    "436": {
      "op": "uncover 3",
      "stack_out": [
        "args.1.1.0#0",
        "encoded_value%2#0",
        "length_uint16%3#0",
        "args.0#0"
      ]
    },
    "438": {
      "op": "concat",
      "defined_out": [
        "args.1.1.0#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "args.1.1.0#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ]
    },
    "439": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "args.1.1.0#0"
      ]
    },
    "441": {
      "op": "itob",
      "defined_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "442": {
      "op": "pushbytes 0x000a",
      "defined_out": [
        "0x000a",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "val_as_bytes%4#0",
        "0x000a"
      ]
    },
    "446": {
      "op": "swap",
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "0x000a",
        "val_as_bytes%4#0"
      ]
    },
    "447": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "448": {
      "op": "swap",
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%21#0",
        "encoded_value%3#0"
      ]
    },
    "449": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "450": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0",
        "encoded_value%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0 (copy)"
      ]
    },
    "452": {
      "op": "len",
      "defined_out": [
        "data_length%6#0",
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "data_length%6#0"
      ]
    },
    "453": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "data_length%6#0",
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "data_length%6#0",
        "4"
      ]
    },
    "455": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%12#0",
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "current_tail_offset%12#0"
      ]
    },
    "456": {
      "op": "itob",
      "defined_out": [
        "as_bytes%11#0",
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "as_bytes%11#0"
      ]
    },
    "457": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0",
        "offset_as_uint16%7#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "offset_as_uint16%7#0"
      ]
    },
    "460": {
      "op": "bytec 5 // 0x0004",
      "defined_out": [
        "0x0004",
        "encoded_tuple_buffer%22#0",
        "encoded_value%2#0",
        "offset_as_uint16%7#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "offset_as_uint16%7#0",
        "0x0004"
      ]
    },
    "462": {
      "op": "swap",
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "0x0004",
        "offset_as_uint16%7#0"
      ]
    },
    "463": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_tuple_buffer%25#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_tuple_buffer%22#0",
        "encoded_tuple_buffer%25#0"
      ]
    },
    "464": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_tuple_buffer%25#0",
        "encoded_value%2#0"
      ]
    },
    "466": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_tuple_buffer%26#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%22#0",
        "encoded_tuple_buffer%26#0"
      ]
    },
    "467": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%26#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "468": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%27#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%27#0"
      ]
    },
    "469": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%27#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%27#0",
        "0x151f7c75"
      ]
    },
    "470": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%27#0"
      ]
    },
    "471": {
      "op": "concat",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "472": {
      "op": "log",
      "stack_out": []
    },
    "473": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "474": {
      "op": "return",
      "stack_out": []
    },
    "475": {
      "block": "main_run_tests_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "477": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "478": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "479": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "481": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "482": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests",
      "op": "callsub run_tests",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "485": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "0x00"
      ]
    },
    "488": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "0x00",
        "0"
      ]
    },
    "489": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%1#0"
      ]
    },
    "491": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "492": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "0x151f7c75"
      ]
    },
    "493": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ]
    },
    "494": {
      "op": "concat",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "495": {
      "op": "log",
      "stack_out": []
    },
    "496": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "497": {
      "op": "return",
      "stack_out": []
    },
    "498": {
      "block": "main_load_tuple_from_box_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "500": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "501": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "502": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "504": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "505": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[16]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%2#0"
      ]
    },
    "508": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[16]%2#0",
        "reinterpret_bytes[16]%2#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%2#0",
        "reinterpret_bytes[16]%2#0 (copy)"
      ]
    },
    "509": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[16]%2#0",
        "reinterpret_bytes[16]%2#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%2#0",
        "reinterpret_bytes[16]%2#0 (copy)",
        "0"
      ]
    },
    "510": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%10#0",
        "reinterpret_bytes[16]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%2#0",
        "item0%10#0"
      ]
    },
    "511": {
      "op": "swap",
      "stack_out": [
        "item0%10#0",
        "reinterpret_bytes[16]%2#0"
      ]
    },
    "512": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item0%10#0",
        "reinterpret_bytes[16]%2#0"
      ],
      "stack_out": [
        "item0%10#0",
        "reinterpret_bytes[16]%2#0",
        "8"
      ]
    },
    "513": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%10#0",
        "item1%9#0"
      ],
      "stack_out": [
        "item0%10#0",
        "item1%9#0"
      ]
    },
    "514": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box",
      "op": "callsub load_tuple_from_box",
      "defined_out": [
        "elements_to_encode%6#0",
        "elements_to_encode%7#0"
      ],
      "stack_out": [
        "elements_to_encode%6#0",
        "elements_to_encode%7#0"
      ]
    },
    "517": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%7#0",
        "elements_to_encode%6#0"
      ]
    },
    "518": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%7#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "elements_to_encode%7#0",
        "val_as_bytes%2#0"
      ]
    },
    "519": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%2#0",
        "elements_to_encode%7#0"
      ]
    },
    "520": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "521": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%18#0"
      ]
    },
    "522": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%18#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%18#0",
        "0x151f7c75"
      ]
    },
    "523": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "524": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "525": {
      "op": "log",
      "stack_out": []
    },
    "526": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "527": {
      "op": "return",
      "stack_out": []
    },
    "528": {
      "block": "main_is_tuple_in_box_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "530": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "531": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "532": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "534": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "535": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[16]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0"
      ]
    },
    "538": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)"
      ]
    },
    "539": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "reinterpret_bytes[16]%1#0 (copy)",
        "0"
      ]
    },
    "540": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%8#0",
        "reinterpret_bytes[16]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%1#0",
        "item0%8#0"
      ]
    },
    "541": {
      "op": "swap",
      "stack_out": [
        "item0%8#0",
        "reinterpret_bytes[16]%1#0"
      ]
    },
    "542": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item0%8#0",
        "reinterpret_bytes[16]%1#0"
      ],
      "stack_out": [
        "item0%8#0",
        "reinterpret_bytes[16]%1#0",
        "8"
      ]
    },
    "543": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%8#0",
        "item1%7#0"
      ],
      "stack_out": [
        "item0%8#0",
        "item1%7#0"
      ]
    },
    "544": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box",
      "op": "callsub is_tuple_in_box",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "547": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "550": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "551": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "553": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "554": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "555": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "556": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "557": {
      "op": "log",
      "stack_out": []
    },
    "558": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "559": {
      "op": "return",
      "stack_out": []
    },
    "560": {
      "block": "main_store_tuple_in_box_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "562": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "563": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "564": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "566": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "567": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%0#0"
      ]
    },
    "570": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ]
    },
    "571": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)",
        "0"
      ]
    },
    "572": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%6#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[16]%0#0",
        "item0%6#0"
      ]
    },
    "573": {
      "op": "swap",
      "stack_out": [
        "item0%6#0",
        "reinterpret_bytes[16]%0#0"
      ]
    },
    "574": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item0%6#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "item0%6#0",
        "reinterpret_bytes[16]%0#0",
        "8"
      ]
    },
    "575": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%6#0",
        "item1%5#0"
      ],
      "stack_out": [
        "item0%6#0",
        "item1%5#0"
      ]
    },
    "576": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box",
      "op": "callsub store_tuple_in_box",
      "stack_out": []
    },
    "579": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "580": {
      "op": "return",
      "stack_out": []
    },
    "581": {
      "block": "main_load_tuple_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "583": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "584": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "585": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "587": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "588": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple",
      "op": "callsub load_tuple",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0"
      ]
    },
    "591": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%0#0"
      ]
    },
    "593": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0"
      ]
    },
    "594": {
      "op": "uncover 4",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "elements_to_encode%2#0"
      ]
    },
    "596": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "597": {
      "op": "dig 4",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "elements_to_encode%3#0 (copy)"
      ]
    },
    "599": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length%0#0"
      ]
    },
    "600": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "as_bytes%0#0"
      ]
    },
    "601": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length_uint16%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0"
      ]
    },
    "604": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0",
        "elements_to_encode%3#0"
      ]
    },
    "606": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "607": {
      "op": "dig 4",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%4#0 (copy)",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "elements_to_encode%4#0 (copy)"
      ]
    },
    "609": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "610": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "611": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "614": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "elements_to_encode%4#0"
      ]
    },
    "616": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "617": {
      "op": "uncover 2",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "619": {
      "op": "bytec_3 // 0x000c",
      "defined_out": [
        "0x000c",
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0",
        "0x000c"
      ]
    },
    "620": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "621": {
      "op": "dig 2",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "623": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "624": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "12"
      ]
    },
    "626": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "627": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%3#0"
      ]
    },
    "628": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "631": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "632": {
      "op": "uncover 2",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ]
    },
    "634": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "635": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%1#0"
      ]
    },
    "636": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "637": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ]
    },
    "638": {
      "op": "uncover 3",
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "640": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "641": {
      "op": "bytec 4 // 0x0012",
      "defined_out": [
        "0x0012",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0",
        "0x0012"
      ]
    },
    "643": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%9#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "644": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%9#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "645": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "646": {
      "op": "dup",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%10#0 (copy)"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%10#0 (copy)"
      ]
    },
    "647": {
      "op": "len",
      "defined_out": [
        "data_length%3#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "data_length%3#0"
      ]
    },
    "648": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "data_length%3#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "data_length%3#0",
        "4"
      ]
    },
    "650": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%6#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "current_tail_offset%6#0"
      ]
    },
    "651": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "as_bytes%6#0"
      ]
    },
    "652": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0"
      ]
    },
    "655": {
      "op": "bytec 5 // 0x0004",
      "defined_out": [
        "0x0004",
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0",
        "0x0004"
      ]
    },
    "657": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "0x0004",
        "offset_as_uint16%4#0"
      ]
    },
    "658": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "659": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%13#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "660": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "661": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%14#0",
        "elements_to_encode%5#0"
      ]
    },
    "662": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%15#0"
      ]
    },
    "663": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%15#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%15#0",
        "0x151f7c75"
      ]
    },
    "664": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "665": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "666": {
      "op": "log",
      "stack_out": []
    },
    "667": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "668": {
      "op": "return",
      "stack_out": []
    },
    "669": {
      "block": "main_store_tuple_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "671": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "672": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "673": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "675": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "676": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "679": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "680": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "0"
      ]
    },
    "681": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_start_offset%0#0"
      ]
    },
    "682": {
      "op": "dig 1",
      "stack_out": [
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "684": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "item_start_offset%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0 (copy)",
        "2"
      ]
    },
    "685": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "686": {
      "op": "dig 2",
      "stack_out": [
        "tmp%7#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "688": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "tmp%7#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "690": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "tmp%7#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "692": {
      "op": "substring3",
      "defined_out": [
        "item0%0#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "693": {
      "op": "dup",
      "defined_out": [
        "item0%0#0",
        "item0%0#0 (copy)",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)"
      ]
    },
    "694": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "0"
      ]
    },
    "695": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0"
      ]
    },
    "696": {
      "op": "dig 1",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item0%0#0 (copy)"
      ]
    },
    "698": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0"
      ]
    },
    "701": {
      "op": "dig 2",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%0#0 (copy)"
      ]
    },
    "703": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item0%0#0",
        "item0%0#0 (copy)",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%0#0 (copy)",
        "16"
      ]
    },
    "705": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "item_start_offset%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0"
      ]
    },
    "706": {
      "op": "dig 3",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0",
        "item0%0#0 (copy)"
      ]
    },
    "708": {
      "op": "len",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "709": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "item0%0#0"
      ]
    },
    "711": {
      "op": "cover 2",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "713": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0"
      ]
    },
    "714": {
      "op": "dup",
      "defined_out": [
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)"
      ]
    },
    "715": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "0"
      ]
    },
    "716": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0"
      ]
    },
    "717": {
      "op": "dig 1",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item2%0#0 (copy)"
      ]
    },
    "719": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item2%0#0 (copy)",
        "8"
      ]
    },
    "720": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_start_offset%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0"
      ]
    },
    "721": {
      "op": "dig 2",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item2%0#0 (copy)"
      ]
    },
    "723": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "item_start_offset%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item2%0#0 (copy)",
        "10"
      ]
    },
    "725": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "726": {
      "op": "dig 3",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "item2%0#0 (copy)"
      ]
    },
    "728": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item2%0#0 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "730": {
      "op": "dig 2",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_start_offset%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item2%0#0 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "732": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%1#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%1#0"
      ]
    },
    "733": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0"
      ]
    },
    "736": {
      "op": "dig 3",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0",
        "item2%0#0 (copy)"
      ]
    },
    "738": {
      "op": "len",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0",
        "item_end_offset%3#0"
      ]
    },
    "739": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0",
        "item_end_offset%3#0",
        "item2%0#0"
      ]
    },
    "741": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item_end_offset%3#0",
        "item2%0#0",
        "item_end_offset%2#0"
      ]
    },
    "743": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%0#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0"
      ]
    },
    "745": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%1#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%1#0"
      ]
    },
    "746": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0"
      ]
    },
    "749": {
      "op": "dig 6",
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "tmp%7#0 (copy)"
      ]
    },
    "751": {
      "op": "len",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%0#0",
        "item_end_offset%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%4#0"
      ]
    },
    "752": {
      "op": "uncover 7",
      "stack_out": [
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%4#0",
        "tmp%7#0"
      ]
    },
    "754": {
      "op": "uncover 7",
      "stack_out": [
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%4#0",
        "tmp%7#0",
        "item_end_offset%0#0"
      ]
    },
    "756": {
      "op": "uncover 2",
      "stack_out": [
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "tmp%7#0",
        "item_end_offset%0#0",
        "item_end_offset%4#0"
      ]
    },
    "758": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item1%3#0",
        "item2%2#0"
      ],
      "stack_out": [
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item1%3#0"
      ]
    },
    "759": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple",
      "op": "callsub store_tuple",
      "stack_out": []
    },
    "762": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "763": {
      "op": "return",
      "stack_out": []
    },
    "764": {
      "block": "main_bare_routing@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "766": {
      "op": "bnz main_after_if_else@16",
      "stack_out": []
    },
    "769": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "771": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "772": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "773": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "774": {
      "op": "return",
      "stack_out": []
    },
    "775": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_nested_singles",
      "params": {
        "one#0": "uint64",
        "reassign#0": "uint64"
      },
      "block": "test_nested_singles",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "778": {
      "op": "intc_0 // 0"
    },
    "779": {
      "op": "intc_2 // 2"
    },
    "780": {
      "op": "frame_dig -2"
    },
    "782": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "one#0 (copy)",
        "s.0.0#0",
        "s.2.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "one#0 (copy)",
        "1"
      ]
    },
    "783": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "tmp%2#0"
      ]
    },
    "784": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0"
      ]
    },
    "785": {
      "op": "frame_dig -2"
    },
    "787": {
      "op": "frame_dig -1",
      "defined_out": [
        "reassign#0 (copy)",
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "reassign#0 (copy)"
      ]
    },
    "789": {
      "op": "bz test_nested_singles_after_if_else@2",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ]
    },
    "792": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.0.0#0"
      ]
    },
    "794": {
      "op": "frame_bury 0",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ]
    },
    "796": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1"
      ]
    },
    "798": {
      "op": "frame_bury 2",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ]
    },
    "800": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.2.0#0"
      ]
    },
    "802": {
      "op": "frame_bury 1",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ]
    },
    "804": {
      "block": "test_nested_singles_after_if_else@2",
      "stack_in": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "reassign#0 (copy)"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "reassign#0 (copy)"
      ]
    },
    "806": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "reassign#0 (copy)"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "reassign#0 (copy)",
        "3"
      ]
    },
    "808": {
      "op": "*",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%0#0"
      ]
    },
    "809": {
      "op": "frame_dig 0",
      "defined_out": [
        "s.0.0#0",
        "select%0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%0#0",
        "s.0.0#0"
      ]
    },
    "811": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "tmp%6#0"
      ]
    },
    "812": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ]
    },
    "813": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "s.0.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "2"
      ]
    },
    "814": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "2",
        "5",
        "s.0.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "2",
        "5"
      ]
    },
    "816": {
      "op": "frame_dig -1",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "2",
        "5",
        "reassign#0 (copy)"
      ]
    },
    "818": {
      "op": "select",
      "defined_out": [
        "s.0.0#0",
        "select%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0"
      ]
    },
    "819": {
      "op": "frame_dig 1",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "select%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0",
        "s.2.0#0"
      ]
    },
    "821": {
      "op": "dig 1",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "select%1#0",
        "select%1#0 (copy)"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0",
        "s.2.0#0",
        "select%1#0 (copy)"
      ]
    },
    "823": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "select%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0",
        "tmp%7#0"
      ]
    },
    "824": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0"
      ]
    },
    "825": {
      "op": "frame_dig 2",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0",
        "select%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0",
        "s.1.0#1"
      ]
    },
    "827": {
      "op": "dup",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#1",
        "s.1.0#1 (copy)",
        "s.2.0#0",
        "select%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "select%1#0",
        "s.1.0#1 (copy)",
        "s.1.0#1 (copy)"
      ]
    },
    "828": {
      "op": "cover 2",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "select%1#0",
        "s.1.0#1 (copy)"
      ]
    },
    "830": {
      "op": "frame_dig -2",
      "defined_out": [
        "one#0 (copy)",
        "s.0.0#0",
        "s.1.0#1",
        "s.1.0#1 (copy)",
        "s.2.0#0",
        "select%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "select%1#0",
        "s.1.0#1 (copy)",
        "one#0 (copy)"
      ]
    },
    "832": {
      "op": "+",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0",
        "s1#1",
        "select%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "select%1#0",
        "s1#1"
      ]
    },
    "833": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "tmp%9#0"
      ]
    },
    "834": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1"
      ]
    },
    "835": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "1"
      ]
    },
    "836": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "1",
        "4",
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "1",
        "4"
      ]
    },
    "838": {
      "op": "frame_dig -1",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "1",
        "4",
        "reassign#0 (copy)"
      ]
    },
    "840": {
      "op": "select",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0",
        "select%3#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "s.1.0#1",
        "select%3#0"
      ]
    },
    "841": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#1",
        "s.2.0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1",
        "tmp%10#0"
      ]
    },
    "842": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.2.0#0",
        "s.1.0#1"
      ]
    },
    "843": {
      "retsub": true,
      "op": "retsub"
    },
    "844": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple",
      "params": {
        "pwl.parent.foo#0": "uint64",
        "pwl.parent.foo_arc#0": "bytes",
        "pwl.parent.child.a#0": "uint64",
        "pwl.parent.child.b#0": "bytes",
        "pwl.parent.child.c#0": "bytes",
        "pwl.children#0": "bytes"
      },
      "block": "store_tuple",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "847": {
      "op": "frame_dig -6",
      "defined_out": [
        "pwl.parent.foo#0 (copy)"
      ],
      "stack_out": [
        "pwl.parent.foo#0 (copy)"
      ]
    },
    "849": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "850": {
      "op": "frame_dig -4",
      "defined_out": [
        "pwl.parent.child.a#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "pwl.parent.child.a#0 (copy)"
      ]
    },
    "852": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "853": {
      "op": "frame_dig -3",
      "defined_out": [
        "pwl.parent.child.b#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "pwl.parent.child.b#0 (copy)"
      ]
    },
    "855": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length%0#0"
      ]
    },
    "856": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "as_bytes%0#0"
      ]
    },
    "857": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0"
      ]
    },
    "860": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0",
        "pwl.parent.child.b#0 (copy)"
      ]
    },
    "862": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "863": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_value%0#0",
        "pwl.parent.child.c#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "pwl.parent.child.c#0 (copy)"
      ]
    },
    "865": {
      "op": "len",
      "defined_out": [
        "encoded_value%0#0",
        "length%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "866": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "867": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_value%0#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "870": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "pwl.parent.child.c#0 (copy)"
      ]
    },
    "872": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "873": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "875": {
      "op": "bytec_3 // 0x000c",
      "defined_out": [
        "0x000c",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0",
        "0x000c"
      ]
    },
    "876": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "877": {
      "op": "dig 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "879": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "880": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "12"
      ]
    },
    "882": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "883": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%3#0"
      ]
    },
    "884": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "887": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "888": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ]
    },
    "890": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "891": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%1#0"
      ]
    },
    "892": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "893": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ]
    },
    "894": {
      "op": "frame_dig -5",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "pwl.parent.foo_arc#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0",
        "pwl.parent.foo_arc#0 (copy)"
      ]
    },
    "896": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "897": {
      "op": "bytec 4 // 0x0012",
      "defined_out": [
        "0x0012",
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%8#0",
        "0x0012"
      ]
    },
    "899": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%9#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "900": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%9#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "901": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0"
      ]
    },
    "902": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%10#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%10#0 (copy)"
      ]
    },
    "903": {
      "op": "len",
      "defined_out": [
        "data_length%3#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "data_length%3#0"
      ]
    },
    "904": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "data_length%3#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "data_length%3#0",
        "4"
      ]
    },
    "906": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "current_tail_offset%6#0"
      ]
    },
    "907": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "as_bytes%6#0"
      ]
    },
    "908": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0"
      ]
    },
    "911": {
      "op": "bytec 5 // 0x0004",
      "defined_out": [
        "0x0004",
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "offset_as_uint16%4#0",
        "0x0004"
      ]
    },
    "913": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "0x0004",
        "offset_as_uint16%4#0"
      ]
    },
    "914": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "915": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "916": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%14#0"
      ]
    },
    "917": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "pwl.children#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%14#0",
        "pwl.children#0 (copy)"
      ]
    },
    "919": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%15#0"
      ]
    },
    "920": {
      "op": "bytec 7 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "encoded_tuple_buffer%15#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%15#0",
        "\"pwl\""
      ]
    },
    "922": {
      "op": "swap",
      "stack_out": [
        "\"pwl\"",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "923": {
      "op": "app_global_put",
      "stack_out": []
    },
    "924": {
      "retsub": true,
      "op": "retsub"
    },
    "925": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple",
      "params": {},
      "block": "load_tuple",
      "stack_in": [],
      "op": "proto 0 6"
    },
    "928": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.children#1"
      ]
    },
    "929": {
      "op": "dupn 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1"
      ]
    },
    "931": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1"
      ]
    },
    "932": {
      "op": "dup",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1"
      ]
    },
    "933": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "0"
      ]
    },
    "934": {
      "op": "bytec 7 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "0",
        "\"pwl\""
      ]
    },
    "936": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "937": {
      "op": "dup",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "maybe_exists%0#0 (copy)"
      ]
    },
    "938": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "940": {
      "op": "swap",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "941": {
      "op": "bz load_tuple_ternary_false@2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "944": {
      "op": "frame_dig 6",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "946": {
      "op": "dup",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "947": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "948": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "949": {
      "op": "dig 1",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "951": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "item_start_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "952": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "953": {
      "op": "dig 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "955": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "957": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "959": {
      "op": "substring3",
      "defined_out": [
        "item0%0#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "960": {
      "op": "dup",
      "defined_out": [
        "item0%0#0",
        "item0%0#0 (copy)",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)"
      ]
    },
    "961": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "0"
      ]
    },
    "962": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0"
      ]
    },
    "963": {
      "op": "dig 1",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item0%0#0 (copy)"
      ]
    },
    "965": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0"
      ]
    },
    "968": {
      "op": "dig 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%0#0 (copy)"
      ]
    },
    "970": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item0%0#0",
        "item0%0#0 (copy)",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%0#0 (copy)",
        "16"
      ]
    },
    "972": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "item_start_offset%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0"
      ]
    },
    "973": {
      "op": "dig 3",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0",
        "item0%0#0 (copy)"
      ]
    },
    "975": {
      "op": "len",
      "defined_out": [
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "976": {
      "op": "uncover 4",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "item0%0#0"
      ]
    },
    "978": {
      "op": "cover 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "980": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0"
      ]
    },
    "981": {
      "op": "dup",
      "defined_out": [
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)"
      ]
    },
    "982": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "0"
      ]
    },
    "983": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0"
      ]
    },
    "984": {
      "op": "dig 1",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item2%0#0 (copy)"
      ]
    },
    "986": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item2%0#0 (copy)",
        "8"
      ]
    },
    "987": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_start_offset%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0"
      ]
    },
    "988": {
      "op": "dig 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item2%0#0 (copy)"
      ]
    },
    "990": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "item_start_offset%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item2%0#0 (copy)",
        "10"
      ]
    },
    "992": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "993": {
      "op": "dig 3",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "item2%0#0 (copy)"
      ]
    },
    "995": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item2%0#0 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "997": {
      "op": "dig 2",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item2%0#0",
        "item2%0#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_start_offset%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item2%0#0 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "999": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%1#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%1#0"
      ]
    },
    "1000": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0"
      ]
    },
    "1003": {
      "op": "dig 3",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0",
        "item2%0#0 (copy)"
      ]
    },
    "1005": {
      "op": "len",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%0#0",
        "item_end_offset%0#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item2%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0",
        "item_end_offset%3#0"
      ]
    },
    "1006": {
      "op": "uncover 4",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item_end_offset%2#0",
        "item1%2#0",
        "item_end_offset%3#0",
        "item2%0#0"
      ]
    },
    "1008": {
      "op": "uncover 3",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item_end_offset%3#0",
        "item2%0#0",
        "item_end_offset%2#0"
      ]
    },
    "1010": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%0#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0"
      ]
    },
    "1012": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%1#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%1#0"
      ]
    },
    "1013": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0"
      ]
    },
    "1016": {
      "op": "dig 6",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1018": {
      "op": "len",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%0#0",
        "item_end_offset%4#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%4#0"
      ]
    },
    "1019": {
      "op": "uncover 7",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%4#0",
        "maybe_value%0#0"
      ]
    },
    "1021": {
      "op": "uncover 7",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "item_end_offset%4#0",
        "maybe_value%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1023": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "maybe_value%0#0",
        "item_end_offset%0#0",
        "item_end_offset%4#0"
      ]
    },
    "1025": {
      "op": "substring3",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "item2%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.children#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "item2%2#0",
        "ternary_result%0.children#1"
      ]
    },
    "1026": {
      "op": "frame_bury 0",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "item1%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.c#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "item1%2#0",
        "ternary_result%0.parent.child.c#1"
      ]
    },
    "1028": {
      "op": "frame_bury 2",
      "defined_out": [
        "item0%2#0",
        "item0%4#0",
        "item1%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "item1%0#0",
        "item0%4#0",
        "ternary_result%0.parent.child.b#1"
      ]
    },
    "1030": {
      "op": "frame_bury 1",
      "defined_out": [
        "item0%2#0",
        "item1%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "item1%0#0",
        "ternary_result%0.parent.child.a#1"
      ]
    },
    "1032": {
      "op": "frame_bury 3",
      "defined_out": [
        "item0%2#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%2#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1034": {
      "op": "swap",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.foo#1"
      ]
    },
    "1035": {
      "op": "frame_bury 4",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1037": {
      "block": "load_tuple_ternary_merge@3",
      "stack_in": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "maybe_exists%0#0"
      ]
    },
    "1039": {
      "error": "check self.pwl exists",
      "op": "assert // check self.pwl exists",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1040": {
      "op": "frame_dig 4",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.parent.foo#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.foo#1"
      ]
    },
    "1042": {
      "op": "swap",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1043": {
      "op": "frame_dig 3",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.a#1"
      ]
    },
    "1045": {
      "op": "frame_dig 1",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1"
      ]
    },
    "1047": {
      "op": "frame_dig 2",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1"
      ]
    },
    "1049": {
      "op": "frame_dig 0",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.children#1"
      ]
    },
    "1051": {
      "op": "frame_bury 5"
    },
    "1053": {
      "op": "frame_bury 4"
    },
    "1055": {
      "op": "frame_bury 3"
    },
    "1057": {
      "op": "frame_bury 2"
    },
    "1059": {
      "op": "frame_bury 1"
    },
    "1061": {
      "op": "frame_bury 0"
    },
    "1063": {
      "retsub": true,
      "op": "retsub"
    },
    "1064": {
      "block": "load_tuple_ternary_false@2",
      "stack_in": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "ternary_result%0.parent.foo#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo#1"
      ]
    },
    "1065": {
      "op": "frame_bury 4",
      "defined_out": [
        "ternary_result%0.parent.foo#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1067": {
      "op": "intc_0 // 0"
    },
    "1068": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.a#1"
      ]
    },
    "1069": {
      "op": "frame_bury 3",
      "defined_out": [
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1071": {
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.b#1"
      ]
    },
    "1072": {
      "op": "frame_bury 1",
      "defined_out": [
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1074": {
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.parent.child.c#1"
      ]
    },
    "1075": {
      "op": "frame_bury 2",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1077": {
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.foo#1",
        "ternary_result%0.parent.foo_arc#1"
      ],
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1",
        "ternary_result%0.children#1"
      ]
    },
    "1078": {
      "op": "frame_bury 0",
      "stack_out": [
        "ternary_result%0.children#1",
        "ternary_result%0.parent.child.b#1",
        "ternary_result%0.parent.child.c#1",
        "ternary_result%0.parent.child.a#1",
        "ternary_result%0.parent.foo#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.parent.foo_arc#1"
      ]
    },
    "1080": {
      "op": "b load_tuple_ternary_merge@3"
    },
    "1083": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "store_tuple_in_box",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1086": {
      "op": "frame_dig -1",
      "defined_out": [
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "key.b#0 (copy)"
      ]
    },
    "1088": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "key.b#0 (copy)",
        "1"
      ]
    },
    "1089": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1090": {
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "key.a#0 (copy)"
      ]
    },
    "1092": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1093": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "key.b#0 (copy)"
      ]
    },
    "1095": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1096": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1098": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0"
      ]
    },
    "1099": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1100": {
      "op": "bytec 6 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0",
        "\"box\""
      ]
    },
    "1102": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "\"box\"",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1103": {
      "op": "concat",
      "defined_out": [
        "box_key%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "box_key%0#0"
      ]
    },
    "1104": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%0#0",
        "box_key%0#0",
        "tmp%0#0"
      ]
    },
    "1106": {
      "op": "itob",
      "defined_out": [
        "box_key%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "box_key%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "1107": {
      "op": "uncover 2",
      "stack_out": [
        "box_key%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1109": {
      "op": "swap",
      "stack_out": [
        "box_key%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "1110": {
      "op": "concat",
      "defined_out": [
        "box_key%0#0",
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "box_key%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1111": {
      "op": "box_put",
      "stack_out": []
    },
    "1112": {
      "retsub": true,
      "op": "retsub"
    },
    "1113": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "is_tuple_in_box",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1116": {
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)"
      ],
      "stack_out": [
        "key.a#0 (copy)"
      ]
    },
    "1118": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1119": {
      "op": "frame_dig -1",
      "defined_out": [
        "key.b#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "key.b#0 (copy)"
      ]
    },
    "1121": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1122": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1123": {
      "op": "bytec 6 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "\"box\""
      ]
    },
    "1125": {
      "op": "swap",
      "stack_out": [
        "\"box\"",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1126": {
      "op": "concat",
      "defined_out": [
        "box_key%0#0"
      ],
      "stack_out": [
        "box_key%0#0"
      ]
    },
    "1127": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1128": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1130": {
      "retsub": true,
      "op": "retsub"
    },
    "1131": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "load_tuple_from_box",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "1134": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "ternary_result%0.a#1"
      ]
    },
    "1135": {
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "key.a#0 (copy)"
      ]
    },
    "1137": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "val_as_bytes%0#0"
      ]
    },
    "1138": {
      "op": "frame_dig -1",
      "defined_out": [
        "key.b#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "val_as_bytes%0#0",
        "key.b#0 (copy)"
      ]
    },
    "1140": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1141": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1142": {
      "op": "bytec 6 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "encoded_tuple_buffer%2#0",
        "\"box\""
      ]
    },
    "1144": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0.a#1",
        "\"box\"",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1145": {
      "op": "concat",
      "defined_out": [
        "box_key%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "box_key%0#0"
      ]
    },
    "1146": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1147": {
      "op": "dup",
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "maybe_exists%0#0 (copy)"
      ]
    },
    "1148": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1150": {
      "op": "swap",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1151": {
      "op": "bz load_tuple_from_box_ternary_false@2",
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1154": {
      "op": "frame_dig 2",
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "1156": {
      "op": "dup",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "1158": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "item0%1#0"
      ]
    },
    "1159": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%1#0",
        "maybe_value%0#0"
      ]
    },
    "1160": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item0%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%1#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "1161": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "item0%1#0",
        "ternary_result%0.b#1"
      ]
    },
    "1162": {
      "op": "swap",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.a#1",
        "ternary_result%0.b#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1",
        "ternary_result%0.a#1"
      ]
    },
    "1163": {
      "op": "frame_bury 0",
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1"
      ]
    },
    "1165": {
      "block": "load_tuple_from_box_ternary_merge@3",
      "stack_in": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1",
        "maybe_exists%0#0"
      ]
    },
    "1167": {
      "error": "check self.box entry exists",
      "op": "assert // check self.box entry exists",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.a#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1",
        "ternary_result%0.a#1"
      ]
    },
    "1168": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_exists%0#0",
        "ternary_result%0.a#1",
        "ternary_result%0.b#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.a#1",
        "ternary_result%0.b#1"
      ]
    },
    "1170": {
      "retsub": true,
      "op": "retsub"
    },
    "1171": {
      "block": "load_tuple_from_box_ternary_false@2",
      "stack_in": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "ternary_result%0.a#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.a#1"
      ]
    },
    "1172": {
      "op": "frame_bury 0",
      "defined_out": [
        "ternary_result%0.a#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1174": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "ternary_result%0.a#1",
        "ternary_result%0.b#1"
      ],
      "stack_out": [
        "ternary_result%0.a#1",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.b#1"
      ]
    },
    "1175": {
      "op": "b load_tuple_from_box_ternary_merge@3"
    },
    "1178": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests",
      "params": {},
      "block": "run_tests",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1181": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "a#2"
      ]
    },
    "1182": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a#2",
        "1"
      ]
    },
    "1183": {
      "op": "intc_2 // 2",
      "defined_out": [
        "1",
        "2"
      ],
      "stack_out": [
        "a#2",
        "1",
        "2"
      ]
    },
    "1184": {
      "op": "addw",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "a#2",
        "nt.1.0#0",
        "nt.1.1#0"
      ]
    },
    "1185": {
      "op": "swap",
      "stack_out": [
        "a#2",
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "1186": {
      "op": "!",
      "defined_out": [
        "nt.1.1#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "a#2",
        "nt.1.1#0",
        "tmp%4#1"
      ]
    },
    "1187": {
      "op": "swap",
      "stack_out": [
        "a#2",
        "tmp%4#1",
        "nt.1.1#0"
      ]
    },
    "1188": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "nt.1.1#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "a#2",
        "tmp%4#1",
        "nt.1.1#0",
        "3"
      ]
    },
    "1190": {
      "op": "==",
      "defined_out": [
        "tmp%4#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "a#2",
        "tmp%4#1",
        "tmp%6#1"
      ]
    },
    "1191": {
      "op": "dup2",
      "defined_out": [
        "tmp%4#1",
        "tmp%4#1 (copy)",
        "tmp%6#1",
        "tmp%6#1 (copy)"
      ],
      "stack_out": [
        "a#2",
        "tmp%4#1",
        "tmp%6#1",
        "tmp%4#1 (copy)",
        "tmp%6#1 (copy)"
      ]
    },
    "1192": {
      "op": "&&",
      "defined_out": [
        "tmp%4#1",
        "tmp%6#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "a#2",
        "tmp%4#1",
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "1193": {
      "op": "assert",
      "stack_out": [
        "a#2",
        "tmp%4#1",
        "tmp%6#1"
      ]
    },
    "1194": {
      "op": "swap",
      "stack_out": [
        "a#2",
        "tmp%6#1",
        "tmp%4#1"
      ]
    },
    "1195": {
      "op": "assert",
      "stack_out": [
        "a#2",
        "tmp%6#1"
      ]
    },
    "1196": {
      "op": "assert",
      "stack_out": [
        "a#2"
      ]
    },
    "1197": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a#2",
        "1"
      ]
    },
    "1198": {
      "op": "dup",
      "stack_out": [
        "a#2",
        "1",
        "1"
      ]
    },
    "1199": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_singles",
      "op": "callsub test_nested_singles",
      "stack_out": [
        "a#2"
      ]
    },
    "1202": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a#2",
        "1"
      ]
    },
    "1203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "a#2",
        "1",
        "0"
      ]
    },
    "1204": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_singles",
      "op": "callsub test_nested_singles",
      "stack_out": [
        "a#2"
      ]
    },
    "1207": {
      "op": "intc_0 // 0"
    },
    "1208": {
      "op": "intc_1 // 1"
    },
    "1209": {
      "op": "intc_2 // 2"
    },
    "1210": {
      "op": "intc_0 // 0",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "1211": {
      "block": "run_tests_for_body@12",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "1213": {
      "op": "uncover 2",
      "defined_out": [
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "1215": {
      "op": "+",
      "defined_out": [
        "t.0#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "tmp%0#3"
      ]
    },
    "1216": {
      "op": "frame_dig 1",
      "defined_out": [
        "t.0#0",
        "tmp%0#3",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "tmp%0#3",
        "total#0"
      ]
    },
    "1218": {
      "op": "+",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "total#0"
      ]
    },
    "1219": {
      "op": "frame_bury 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0"
      ]
    },
    "1221": {
      "op": "switch run_tests_for_header_1@13 run_tests_for_header_2@14 run_tests_for_header_3@15",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0"
      ]
    },
    "1229": {
      "op": "intc_0 // 0"
    },
    "1230": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#2",
        "loop_counter%1#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "a#2"
      ]
    },
    "1231": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#2",
        "loop_counter%1#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0"
      ]
    },
    "1233": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "b#2"
      ]
    },
    "1234": {
      "op": "swap",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0",
        "t.0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "b#2",
        "loop_counter%1#0"
      ]
    },
    "1235": {
      "block": "run_tests_for_body@17",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0",
        "b#2",
        "loop_counter%1#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "a#2"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "b#2",
        "loop_counter%1#0",
        "a#2"
      ]
    },
    "1237": {
      "op": "uncover 2",
      "defined_out": [
        "a#2",
        "b#2"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "a#2",
        "b#2"
      ]
    },
    "1239": {
      "op": "+",
      "defined_out": [
        "a#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "tmp%1#3"
      ]
    },
    "1240": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#2",
        "tmp%1#3",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "tmp%1#3",
        "total#0"
      ]
    },
    "1242": {
      "op": "+",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "total#0"
      ]
    },
    "1243": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#2",
        "loop_counter%1#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0"
      ]
    },
    "1245": {
      "op": "switch run_tests_for_header_1@18 run_tests_for_header_2@19 run_tests_for_header_3@20",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0"
      ]
    },
    "1253": {
      "op": "frame_dig 1",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "total#0"
      ]
    },
    "1255": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "a#2",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "total#0",
        "8"
      ]
    },
    "1256": {
      "op": "/",
      "defined_out": [
        "a#2",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "tmp%2#3"
      ]
    },
    "1257": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "a#2",
        "tmp%2#3",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "tmp%2#3",
        "3"
      ]
    },
    "1259": {
      "op": "==",
      "defined_out": [
        "a#2",
        "tmp%3#3",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "tmp%3#3"
      ]
    },
    "1260": {
      "op": "assert",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0"
      ]
    },
    "1261": {
      "op": "bytec_2 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\"",
        "a#2",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "\"build_nested_call_count\""
      ]
    },
    "1262": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "\"build_nested_call_count\"",
        "0"
      ]
    },
    "1263": {
      "op": "app_global_put",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0"
      ]
    },
    "1264": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "0"
      ]
    },
    "1265": {
      "op": "bytec_2 // \"build_nested_call_count\"",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "0",
        "\"build_nested_call_count\""
      ]
    },
    "1266": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#2",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1267": {
      "error": "check self.build_nested_call_count exists",
      "op": "assert // check self.build_nested_call_count exists",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "maybe_value%0#0"
      ]
    },
    "1268": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "a#2",
        "maybe_value%0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1269": {
      "op": "+",
      "defined_out": [
        "a#2",
        "new_state_value%0#0",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "new_state_value%0#0"
      ]
    },
    "1270": {
      "op": "bytec_2 // \"build_nested_call_count\"",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "new_state_value%0#0",
        "\"build_nested_call_count\""
      ]
    },
    "1271": {
      "op": "swap",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "\"build_nested_call_count\"",
        "new_state_value%0#0"
      ]
    },
    "1272": {
      "op": "app_global_put",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0"
      ]
    },
    "1273": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "0"
      ]
    },
    "1274": {
      "op": "bytec_2 // \"build_nested_call_count\"",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "0",
        "\"build_nested_call_count\""
      ]
    },
    "1275": {
      "op": "app_global_get_ex",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1276": {
      "error": "check self.build_nested_call_count exists",
      "op": "assert // check self.build_nested_call_count exists",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "maybe_value%0#0"
      ]
    },
    "1277": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1278": {
      "op": "==",
      "defined_out": [
        "a#2",
        "tmp%6#1",
        "total#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "tmp%6#1"
      ]
    },
    "1279": {
      "op": "assert",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0"
      ]
    },
    "1280": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "1"
      ]
    },
    "1281": {
      "op": "frame_bury 0"
    },
    "1283": {
      "retsub": true,
      "op": "retsub"
    },
    "1284": {
      "block": "run_tests_for_header_3@20",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0"
      ],
      "op": "pushint 3 // 3"
    },
    "1286": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "a#2"
      ]
    },
    "1287": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0"
      ]
    },
    "1289": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "b#2"
      ]
    },
    "1290": {
      "op": "swap",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "b#2",
        "loop_counter%1#0"
      ]
    },
    "1291": {
      "op": "b run_tests_for_body@17"
    },
    "1294": {
      "block": "run_tests_for_header_2@19",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0"
      ],
      "op": "intc_2 // 2"
    },
    "1295": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "a#2"
      ]
    },
    "1296": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0"
      ]
    },
    "1298": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "b#2"
      ]
    },
    "1299": {
      "op": "swap",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "b#2",
        "loop_counter%1#0"
      ]
    },
    "1300": {
      "op": "b run_tests_for_body@17"
    },
    "1303": {
      "block": "run_tests_for_header_1@18",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0"
      ],
      "op": "intc_1 // 1"
    },
    "1304": {
      "op": "intc_2 // 2",
      "defined_out": [
        "a#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "a#2"
      ]
    },
    "1305": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0"
      ]
    },
    "1307": {
      "op": "intc_1 // 1",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%1#0",
        "b#2"
      ]
    },
    "1308": {
      "op": "swap",
      "defined_out": [
        "a#2",
        "b#2",
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "b#2",
        "loop_counter%1#0"
      ]
    },
    "1309": {
      "op": "b run_tests_for_body@17"
    },
    "1312": {
      "block": "run_tests_for_header_3@15",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0"
      ],
      "op": "pushint 3 // 3"
    },
    "1314": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "1315": {
      "op": "frame_bury 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0"
      ]
    },
    "1317": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "1318": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "1319": {
      "op": "b run_tests_for_body@12"
    },
    "1322": {
      "block": "run_tests_for_header_2@14",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0"
      ],
      "op": "intc_2 // 2"
    },
    "1323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "1324": {
      "op": "frame_bury 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0"
      ]
    },
    "1326": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "1327": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "1328": {
      "op": "b run_tests_for_body@12"
    },
    "1331": {
      "block": "run_tests_for_header_1@13",
      "stack_in": [
        "a#2",
        "total#0",
        "t.0#0"
      ],
      "op": "intc_1 // 1"
    },
    "1332": {
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "1333": {
      "op": "frame_bury 2",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0"
      ]
    },
    "1335": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "loop_counter%0#0",
        "t.1#0"
      ]
    },
    "1336": {
      "op": "swap",
      "defined_out": [
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#2",
        "total#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "1337": {
      "op": "b run_tests_for_body@12"
    }
  }
}